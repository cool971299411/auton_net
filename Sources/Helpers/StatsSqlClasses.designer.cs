#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Helpers
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="auton")]
	public partial class StatsSqlClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertlog(log instance);
    partial void Updatelog(log instance);
    partial void Deletelog(log instance);
    #endregion
		
		public StatsSqlClassesDataContext() : 
				base(global::Helpers.Properties.Settings.Default.autonConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StatsSqlClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsSqlClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsSqlClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatsSqlClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<log> logs
		{
			get
			{
				return this.GetTable<log>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.logs")]
	public partial class log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _datetime;
		
		private System.Nullable<double> _current_speed;
		
		private System.Nullable<double> _target_speed;
		
		private System.Nullable<double> _speed_steering;
		
		private System.Nullable<double> _current_angle;
		
		private System.Nullable<double> _target_angle;
		
		private System.Nullable<double> _angle_steering;
		
		private System.Nullable<double> _current_brake;
		
		private System.Nullable<double> _target_brake;
		
		private System.Nullable<double> _brake_steering;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndatetimeChanging(System.DateTime value);
    partial void OndatetimeChanged();
    partial void Oncurrent_speedChanging(System.Nullable<double> value);
    partial void Oncurrent_speedChanged();
    partial void Ontarget_speedChanging(System.Nullable<double> value);
    partial void Ontarget_speedChanged();
    partial void Onspeed_steeringChanging(System.Nullable<double> value);
    partial void Onspeed_steeringChanged();
    partial void Oncurrent_angleChanging(System.Nullable<double> value);
    partial void Oncurrent_angleChanged();
    partial void Ontarget_angleChanging(System.Nullable<double> value);
    partial void Ontarget_angleChanged();
    partial void Onangle_steeringChanging(System.Nullable<double> value);
    partial void Onangle_steeringChanged();
    partial void Oncurrent_brakeChanging(System.Nullable<double> value);
    partial void Oncurrent_brakeChanged();
    partial void Ontarget_brakeChanging(System.Nullable<double> value);
    partial void Ontarget_brakeChanged();
    partial void Onbrake_steeringChanging(System.Nullable<double> value);
    partial void Onbrake_steeringChanged();
    #endregion
		
		public log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime NOT NULL")]
		public System.DateTime datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_speed", DbType="Float")]
		public System.Nullable<double> current_speed
		{
			get
			{
				return this._current_speed;
			}
			set
			{
				if ((this._current_speed != value))
				{
					this.Oncurrent_speedChanging(value);
					this.SendPropertyChanging();
					this._current_speed = value;
					this.SendPropertyChanged("current_speed");
					this.Oncurrent_speedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_target_speed", DbType="Float")]
		public System.Nullable<double> target_speed
		{
			get
			{
				return this._target_speed;
			}
			set
			{
				if ((this._target_speed != value))
				{
					this.Ontarget_speedChanging(value);
					this.SendPropertyChanging();
					this._target_speed = value;
					this.SendPropertyChanged("target_speed");
					this.Ontarget_speedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_speed_steering", DbType="Float")]
		public System.Nullable<double> speed_steering
		{
			get
			{
				return this._speed_steering;
			}
			set
			{
				if ((this._speed_steering != value))
				{
					this.Onspeed_steeringChanging(value);
					this.SendPropertyChanging();
					this._speed_steering = value;
					this.SendPropertyChanged("speed_steering");
					this.Onspeed_steeringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_angle", DbType="Float")]
		public System.Nullable<double> current_angle
		{
			get
			{
				return this._current_angle;
			}
			set
			{
				if ((this._current_angle != value))
				{
					this.Oncurrent_angleChanging(value);
					this.SendPropertyChanging();
					this._current_angle = value;
					this.SendPropertyChanged("current_angle");
					this.Oncurrent_angleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_target_angle", DbType="Float")]
		public System.Nullable<double> target_angle
		{
			get
			{
				return this._target_angle;
			}
			set
			{
				if ((this._target_angle != value))
				{
					this.Ontarget_angleChanging(value);
					this.SendPropertyChanging();
					this._target_angle = value;
					this.SendPropertyChanged("target_angle");
					this.Ontarget_angleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_angle_steering", DbType="Float")]
		public System.Nullable<double> angle_steering
		{
			get
			{
				return this._angle_steering;
			}
			set
			{
				if ((this._angle_steering != value))
				{
					this.Onangle_steeringChanging(value);
					this.SendPropertyChanging();
					this._angle_steering = value;
					this.SendPropertyChanged("angle_steering");
					this.Onangle_steeringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_current_brake", DbType="Float")]
		public System.Nullable<double> current_brake
		{
			get
			{
				return this._current_brake;
			}
			set
			{
				if ((this._current_brake != value))
				{
					this.Oncurrent_brakeChanging(value);
					this.SendPropertyChanging();
					this._current_brake = value;
					this.SendPropertyChanged("current_brake");
					this.Oncurrent_brakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_target_brake", DbType="Float")]
		public System.Nullable<double> target_brake
		{
			get
			{
				return this._target_brake;
			}
			set
			{
				if ((this._target_brake != value))
				{
					this.Ontarget_brakeChanging(value);
					this.SendPropertyChanging();
					this._target_brake = value;
					this.SendPropertyChanged("target_brake");
					this.Ontarget_brakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brake_steering", DbType="Float")]
		public System.Nullable<double> brake_steering
		{
			get
			{
				return this._brake_steering;
			}
			set
			{
				if ((this._brake_steering != value))
				{
					this.Onbrake_steeringChanging(value);
					this.SendPropertyChanging();
					this._brake_steering = value;
					this.SendPropertyChanged("brake_steering");
					this.Onbrake_steeringChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
